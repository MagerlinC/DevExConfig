{
  "Console Log": {
    "prefix": "clog",
    "body": ["console.log($1);"]
  },
  "Create new React Component": {
    "prefix": "rcc",
    "body": [
      "import React from 'react';",
      "import \"./$2.scss\"",
      "type $1Props = {$3};",
      "const $1: React.FC<$1Props> = ({$4}) => {",
      "\treturn (<div className=\"$1-wrapper\">$5</div>);",
      "}",
      "export default $1;"
    ]
  },
  "Create new React Component with styled-components": {
    "prefix": "rccs",
    "body": [
      "import React from 'react';",
      "import styled from \"styled-components\";",
      "type $1StyleProps = {",
      "\t$2",
      "}",
      "const $1Wrapper = styled.div<$1StyleProps>``;",
      "type $1Props = {$3};",
      "const $1: React.FC<$1Props> = ({$4}) => {",
      "\treturn (<$1Wrapper></$1Wrapper>);",
      "}",
      "export default $1;"
    ]
  },
  "Create new React Component with emotion": {
    "prefix": "rcce",

    "body": [
      "import React from 'react';",
      "import styled from \"@emotion/styled\";",
      "type $1StyleProps = {",
      "\t$2",
      "}",
      "const $1Wrapper = styled.div<$1StyleProps>``;",
      "type $1Props = {$3};",
      "const $1: React.FC<$1Props> = ({$4}) => {",
      "\treturn (<$1Wrapper></$1Wrapper>);",
      "}",
      "export default $1;"
    ]
  },
  "Styled Component - Style Based on Prop": {
    "prefix": "prst",
    "body": ["${(props) => props.$1}"]
  },
  "React classname": {
    "prefix": "cla",
    "body": ["className={\"$1\"}"]
  },
  "Double Div": {
    "prefix": "ddiv",
    "body": [
      "<div className={'$1-and-$2'}>",
      "\t<div className={'$1'}>",
      "\t\t$3",
      "\t</div>",
      "\t<div className={'$2'}>",
      "\t</div>",
      "</div>"
    ]
  },
  "Display flex Row": {
    "prefix": "dfr",
    "body": ["display: flex;", "flex-direction: row;"]
  },
  "Display flex Col": {
    "prefix": "dfc",
    "body": ["display: flex;", "flex-direction: column;"]
  },
  "Center within flex": {
    "prefix": "cntr",
    "body": ["align-items: center;", "justify-content: center;"]
  },
  "React useState": {
    "prefix": "ust",
    "body": ["const [$1, set$2] = useState<$3>($4)"]
  },
  "Simple Styled Component": {
    "prefix": "ssc",
    "body": ["export const $1 = styled.div`", "\t${({theme}) => `$2`}", "`"]
  },
  "Theme variable": {
    "prefix": "thm",
    "body": "${({theme}) => css`$1`}"
  }
}
